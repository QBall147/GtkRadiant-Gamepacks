//**********************************************************************//
//	gfx.shader updated						//
//	by Eutectic - 23 Jan 2000					//
//	This file is irrelevant for Q3Radiant				//
//	It was updated for sake of completeness:			//
//	shaders that belong here were moved from other shader files	//
//									//
//	SHADERS THAT DIDN'T BELONG HERE AND MOVED TO PROPER FILE: 0	//
//	SHADERS THAT BELONGED HERE BUT WERE IN ANOTHER FILE: 6		//
//	powerups/blueflag						//
//	powerups/redflag						//
//	sprites/foe							//
//	sprites/friend							//
//	sprites/plasma1							//
//	sprites/plasma2							//
//**********************************************************************//

// GFX.SHADER
// 
// this file contains shaders that are used by the programmers to
// generate special effects not attached to specific geometry.  This
// also has 2D shaders such as fonts, etc.
//

// the REGION shader is generated by the map editor on temporary
// brushes around a selected area for testing parts of maps

textures/REGION
{
	surfaceparm nolightmap
}

// the background for the netgraph
lagometer
{
	nopicmip
	{
		map gfx/2d/lag.tga
	}
}

// blinked on top of lagometer when connection is interrupted
disconnected
{
	nopicmip
	{
		map gfx/2d/net.tga
	}
}

white
{
	{
		map *white
		blendfunc	GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
		rgbgen vertex
	}
}

console
{
	nopicmip
	nomipmaps
    
        {
		map gfx/misc/console01.tga
                blendfunc GL_ONE GL_ZERO
                tcMod scroll .02  0
                tcmod scale 2 1
	}
        {
                map gfx/misc/console02.tga
                //map textures/sfx/firegorre3.tga
                blendfunc add
                tcMod turb 0 .1 0 .1
                tcMod scale 2 1
                tcmod scroll 0.2  .1
	} 

}

menuback
{
	nopicmip
	nomipmaps
        //{
        //        map textures/sfx/logo512.tga
        //}

        //{
        //        map textures/sfx/specular.tga
         //       //blendfunc add
        //        tcMod turb 0 .8 0 .2
        //        tcmod scroll -.1  -.2
	//} 
         {
                map textures/sfx/logo512.tga
                // blendfunc blend
                rgbgen identity
        }
        //{
	//	map textures/sfx/proto_zzzdrk.tga
        //        blendfunc add
        //        tcMod turb 0 .1 0 .9
        //         tcmod scale .2 .2
        //         tcMod scroll .02  0.7
        //         rgbgen identity
	//} 
        
}
menubacknologo
{
	nopicmip
	nomipmaps
       
        {
               map gfx/colors/black.tga
	       //map textures/sfx/proto_zzzdrk.tga
               // tcMod turb 0 .1 0 .9
               // tcmod scale .2 .2
               // tcMod scroll .02  0.7
	} 
        
}

menubackRagePro	// blends turn to shit on rage pro, so skip it
{
	nopicmip
	nomipmaps
        {
                map textures/sfx/logo512.tga
        }
        
}


levelShotDetail
// used to break up the blur on levelshots
{
	nopicmip
	{
		map textures/sfx/detail.tga
        blendfunc GL_DST_COLOR GL_SRC_COLOR
		rgbgen identity
	}
}

//
// special effects as seen on players
//

powerups/battleSuit
{
	nopicmip
	deformVertexes wave 100 sin 1 0 0 0
	{
		map textures/effects/envmapgold2.tga
                //map textures/sfx/specular.tga
		tcGen environment
		tcMod turb 0 0.15 0 0.3
                tcmod rotate 333
                tcmod scroll .3 .3
		blendfunc add
	}
}

powerups/battleWeapon
{
	nopicmip
	deformVertexes wave 100 sin 0.5 0 0 0
	{
		map textures/effects/envmapgold2.tga
                //map textures/sfx/specular.tga
		tcGen environment
		tcMod turb 0 0.15 0 0.3
                tcmod rotate 333
                tcmod scroll .3 .3
		blendfunc add
	}
}

powerups/invisibility
{
	nopicmip
	{
		map textures/effects/invismap.tga
                blendfunc add
		tcMod turb 0 0.15 0 0.25
		tcGen environment
		//blendfunc add
		//rgbGen const ( 0.501961 0.501961 0.501961 )
		//tcMod rotate 30
		//tcMod scroll 1 0.1
		//tcGen environment 
	}
}

powerups/quad
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/quadmap2.tga
		blendfunc add
		tcGen environment
                tcmod rotate 30
		//tcMod turb 0 0.2 0 .2
                tcmod scroll 1 .1
	}
}

powerups/quadWeapon
{
	deformVertexes wave 100 sin 0.5 0 0 0
	{
		map textures/effects/quadmap2.tga
		blendfunc add
		tcGen environment
                tcmod rotate 30
		//tcMod turb 0 0.2 0 .2
                tcmod scroll 1 .1
	}
}

powerups/ice1
{
	nopicmip
	deformVertexes wave 100 sin 1 0 0 0
	{
		map textures/effects/icemap.tga
		blendfunc add
		tcGen environment
        tcmod rotate 30
        tcmod scroll 0.75 -0.075
	}
}

powerups/ice2
{
	nopicmip
	deformVertexes wave 100 sin 2 0 0 0
	{
		map textures/effects/icemap.tga
		blendfunc add
		tcGen environment
        tcmod rotate 30
        tcmod scroll 0.5 -0.05
	}
}

powerups/ice3
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/icemap.tga
		blendfunc add
		tcGen environment
        tcmod rotate 30
        tcmod scroll 0.25 -0.025
	}
}

powerups/spawnarmor
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/spawnarmormap.tga
		blendfunc add
		tcGen environment
                tcmod rotate 30
		//tcMod turb 0 0.2 0 .2
                tcmod scroll 1 .1
	}
}

powerups/spawnarmor2
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/spawnarmormap2.tga
		blendfunc add
		tcGen environment
                tcmod rotate 30
		//tcMod turb 0 0.2 0 .2
                tcmod scroll 1 .1
	}
}

powerups/regen
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/regenmap2.tga
		blendfunc add
		tcGen environment
                tcmod rotate 30
		//tcMod turb 0 0.2 0 .2
                tcmod scroll 1 .1
	}
}

powerups/blueflag
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/blueflagmap.tga
		blendfunc add
		tcGen environment
		tcMod turb 0 0.2 0 1
	}
}

powerups/redflag
{
	nopicmip
	deformVertexes wave 100 sin 3 0 0 0
	{
		map textures/effects/redflagmap.tga
		blendfunc add
		tcGen environment
		tcMod turb 0 0.2 0 1
	}
}

icons/infinite
{
	nopicmip
	{
		map icons/infinite.tga
		blendfunc blend
	}
}

icons/skull_red
{
	nopicmip
	{
		map icons/skull_red.tga
		blendfunc blend
	}
}

icons/thaw
{
	nopicmip
	{
		map icons/thaw.tga
		blendfunc blend
	}
}

//=========================

//
// holdable item icons
//

icons/medkit
{
	nopicmip
	{
		map icons/medkit.tga
		blendfunc blend
	}
}

icons/teleporter
{
	nopicmip
	{
		map icons/teleporter.tga
		blendfunc blend
	}
}

//
// powerup icons
//
icons/spawnarmor
{
	nopicmip
	{
		map icons/spawnarmor.tga
		blendfunc blend
	}
}

icons/envirosuit
{
	nopicmip
	{
		map icons/envirosuit.tga
		blendfunc blend
	}
}

icons/flight
{
	nopicmip
	{
		map icons/flight.tga
		blendfunc blend
	}
}

icons/haste
{
	nopicmip
	{
		map icons/haste.tga
		blendfunc blend
	}
}

icons/invis
{
	nopicmip
	{
		map icons/invis.tga
		blendfunc blend
	}
}

icons/quad
{
	nopicmip
	{
		map icons/quad.tga
		blendfunc blend
	}
}

icons/regen
{
	nopicmip
	{
		map icons/regen.tga
		blendfunc blend
	}
}

icons/kamikaze
{
	nopicmip
	{
		map icons/kamikaze.tga
		blendfunc blend
	}
}

icons/scout
{
	nopicmip
	{
		map icons/scout.tga
		blendfunc blend
	}
}

icons/guard
{
	nopicmip
	{
		map icons/guard.tga
		blendfunc blend
	}
}

icons/doubler
{
	nopicmip
	{
		map icons/doubler.tga
		blendfunc blend
	}
}

icons/invulnerability
{
	nopicmip
	{
		map icons/invulnerability.tga
		blendfunc blend
	}
}

icons/ammo_regen
{
	nopicmip
	{
		map icons/ammo_regen.tga
		blendfunc blend
	}
}

icons/armor_regen
{
	nopicmip
	{
		map icons/armor_regen.tga
		blendfunc blend
	}
}

// reward medals used in the game floating over client's heads

medal_excellent
{
	nopicmip
	{
		clampmap menu/medals/medal_excellent.tga
		blendfunc blend
	}
}

medal_gauntlet
{
	nopicmip
	{
		clampmap menu/medals/medal_gauntlet.tga
		blendfunc blend
	}
}

medal_impressive
{
	nopicmip
	{
		clampmap menu/medals/medal_impressive.tga
		blendfunc blend
	}
}

medal_assist
{
	nopicmip
	{
		clampmap menu/medals/medal_assist.tga
		blendfunc blend
	}
}

medal_defend
{
	nopicmip
	{
		clampmap menu/medals/medal_defend.tga
		blendfunc blend
	}
}

medal_capture
{
	nopicmip
	{
		clampmap menu/medals/medal_capture.tga
		blendfunc blend
	}
}

medal_timing
{
	nopicmip
	{
		clampmap menu/medals/medal_timing.tga
		blendfunc blend
	}
}

medal_damage
{
	nopicmip
	{
		clampmap menu/medals/medal_damage.tga
		blendfunc blend
	}
}

//
// weapon icons
//

icons/iconw_gauntlet
{
	nopicmip
	{
		map icons/iconw_gauntlet.tga
		blendfunc blend
	}
}

icons/iconw_machinegun
{
	nopicmip
	{
		map icons/iconw_machinegun.tga
		blendfunc blend
	}
}

icons/iconw_rocket
{
	nopicmip
	{
		map icons/iconw_rocket.tga
		blendfunc blend
	}
}

icons/iconw_shotgun
{
	nopicmip
	{
		map icons/iconw_shotgun.tga
		blendfunc blend
		rgbgen identitylighting
	}
}

icons/iconw_grenade
{
	nopicmip
	{
		map icons/iconw_grenade.tga
		blendfunc blend
	}
}

icons/iconw_lightning
{
	nopicmip
	{
		map icons/iconw_lightning.tga
		blendfunc blend
	}
}

icons/iconw_plasma
{
	nopicmip
	{
		map icons/iconw_plasma.tga
		blendfunc blend
	}
}

icons/iconw_railgun
{
	nopicmip
	{
		map icons/iconw_railgun.tga
		blendfunc blend
	}
}

icons/iconw_bfg
{
	nopicmip
	{
		map icons/iconw_bfg.tga
		blendfunc blend
	}
}

icons/iconw_grapple
{
	nopicmip
	{
		map icons/iconw_grapple.tga
		blendfunc blend
	}
}

icons/iconw_nailgun
{
	nopicmip
	{
		map icons/nailgun128.tga
		blendfunc blend
	}
}

icons/iconw_chaingun
{
	nopicmip
	{
		map icons/chaingun128.tga
		blendfunc blend
	}
}

icons/iconw_proxlauncher
{
	nopicmip
	{
		map icons/proxmine.tga
		blendfunc blend
	}
}

//
// ammo icons
//

icons/icona_machinegun
{
	nopicmip
	{
		map icons/icona_machinegun.tga
		blendfunc blend
	}
}

icons/icona_rocket
{
	nopicmip
	{
		map icons/icona_rocket.tga
		blendfunc blend
	}
}

icons/icona_shotgun
{
	nopicmip
	{
		map icons/icona_shotgun.tga
		blendfunc blend
		rgbgen identitylighting
	}
}

icons/icona_grenade
{
	nopicmip
	{
		map icons/icona_grenade.tga
		blendfunc blend
	}
}

icons/icona_lightning
{
	nopicmip
	{
		map icons/icona_lightning.tga
		blendfunc blend
	}
}

icons/icona_plasma
{
	nopicmip
	{
		map icons/icona_plasma.tga
		blendfunc blend
	}
}

icons/icona_railgun
{
	nopicmip
	{
		map icons/icona_railgun.tga
		blendfunc blend
	}
}

icons/icona_bfg
{
	nopicmip
	{
		map icons/icona_bfg.tga
		blendfunc blend
	}
}

icons/icona_nailgun
{
	nopicmip
	{
		map icons/ammo_nailgun.tga
		blendfunc blend
	}
}

icons/icona_chaingun
{
	nopicmip
	{
		map icons/ammo_chaingun.tga
		blendfunc blend
	}
}

icons/icona_proxlauncher
{
	nopicmip
	{
		map icons/ammo_proxmine.tga
		blendfunc blend
	}
}


//
// armor icons
//

icons/iconr_shard
{
	nopicmip
	{
		map icons/iconr_shard.tga
		blendfunc blend
	}
}

icons/iconr_green
{
	nopicmip
	{
		map icons/iconr_green.tga
		blendfunc blend
	}
}

icons/iconr_yellow
{
	nopicmip
	{
		map icons/iconr_yellow.tga
		blendfunc blend
	}
}

icons/iconr_red
{
	nopicmip
	{
		map icons/iconr_red.tga
		blendfunc blend
	}
}

//
// health icons
//

icons/iconh_green
{
	nopicmip
	{
		map icons/iconh_green.tga
		blendfunc blend
	}
}

icons/iconh_yellow
{
	nopicmip
	{
		map icons/iconh_yellow.tga
		blendfunc blend
	}
}

icons/iconh_red
{
	nopicmip
	{
		map icons/iconh_red.tga
		blendfunc blend
	}
        //{
	//	clampmap icons/iconh_red2.tga
	//	blendfunc blend
        //        tcMod stretch sin .04 1 0 1
	//}
}

icons/iconh_mega
{
	nopicmip
	{
		map icons/iconh_mega.tga
		blendfunc blend
	}
}

//
// CTF icons
//

icons/iconf_red
{
	nopicmip
	{
		map icons/iconf_red.tga
		blendfunc blend
	}
}

icons/iconf_blu
{
	nopicmip
	{
		map icons/iconf_blu.tga
		blendfunc blend
	}
}


//===================================================

gfx/2d/menuinfo
{
	nopicmip
	{
		map gfx/2d/menuinfo.tga
	}
}

gfx/2d/menuinfo2
{
	nopicmip
	{
		map gfx/2d/menuinfo2.tga
	}
}

gfx/2d/quit
{
	nopicmip
	nomipmaps
	{
		map gfx/2d/quit.tga
	}
}

gfx/2d/cursor
{
    nopicmip
	nomipmaps
    {
        map gfx/2d/cursor.tga
    }
}




gfx/misc/raindrop
{
	cull none
	polygonoffset
	nopicmip
	nomipmaps
	{
		map gfx/misc/raindrop.tga
		blendfunc blend
		//alphagen vertex
	}
}

gfx/misc/raindropwater
{
	cull none
	{
		map gfx/misc/raindropwater.tga
		blendfunc blend
		//alphagen vertex
	}
}

gfx/misc/raindropsolid
{
	polygonoffset
	{
		map gfx/misc/raindropsolid.tga
		blendfunc blend
		alphagen vertex
	}
}


gfx/misc/snow
{
	nopicmip
	cull none
	polygonoffset
	{
		map gfx/misc/snowflake.tga
		blendfunc blend
		alphagen vertex
	}
}

//==========================================================================

// chat icon floating over client's heads in the game

sprites/balloon3
{
	nopicmip
	{
		map sprites/balloon4.tga
		blendfunc blend
	}
}

// friend and foe icons floating over client's heads in teamplay games

sprites/friend
{
	nomipmaps
	nopicmip
	{
		map sprites/friend.tga
		blendfunc blend
	}
}

sprites/friend2
{
	nomipmaps
	nopicmip
	{
		map sprites/friend.tga
		blendfunc blend
		depthtest disable
	}
}

sprites/foe
{
	nomipmaps
	nopicmip
	{
		map sprites/foe.tga
		blendfunc blend
	}
}

sprites/foe2
{
	nomipmaps
	nopicmip
	{
		map sprites/foe.tga
		blendfunc blend
		depthtest disable
	}
}

sprites/frozen
{
	nomipmaps
	nopicmip
	{
		map sprites/frozen.tga
		blendfunc blend
	}
}

sprites/flagcarrier
{
	nomipmaps
	nopicmip
	{
		map sprites/flagcarrier.tga
		blendfunc blend
	}
}

sprites/neutralflagcarrier
{
	nomipmaps
	nopicmip
	{
		map sprites/flagcarrier_neutral.tga
		blendfunc	GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
		rgbgen vertex
	}
}

sprites/dom_point
{
	nomipmaps
	nopicmip
	{
		map sprites/dompoint.tga
		blendfunc	GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
		rgbgen vertex
	}
}

sprites/dom_point_distress
{
	nomipmaps
	nopicmip
	{
		map sprites/dompoint_distress.tga
		blendfunc	GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
		rgbgen vertex
	}
}


sprites/plasma1
{
	nopicmip
	cull disable
	{
		clampmap sprites/plasmaa.tga
		blendfunc add
		tcMod rotate 931
	}
}

sprites/plasma2
{
	nopicmip
	cull disable
	{
		map sprites/plasma2.tga
		blendfunc add
	}
}

// this is an example of a crossfaded animation cycle

textures/animationTest
{
	qer_editorimage	textures/liquids/bloodwater1.tga
	{
		animMap 0.5 textures/liquids/bloodwater1.tga textures/liquids/pool.tga textures/liquids/slime7.tga
	}	
	{
		animMap 0.5 textures/liquids/pool.tga textures/liquids/slime7.tga textures/liquids/bloodwater1.tga
		blendfunc	GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
		alphaGen	wave sawtooth 0 1 0 0.5
	}	
	{
		map $lightmap
		blendfunc filter
	}
}

teleportEffect
{
	nopicmip
	cull none
	{
		map gfx/misc/teleportEffect2.tga
                blendfunc add
		rgbGen entity
		tcMod scale 1 4
		tcMod scroll 0 2
	}
}

// markShadow is the very cheap blurry blob underneat the player

markShadow
{
	nopicmip
	polygonOffset
	{
		map gfx/damage/shadow.tga
		blendfunc GL_ZERO GL_ONE_MINUS_SRC_COLOR
		rgbGen exactVertex
	}	
}

domShadow
{
	nopicmip
	novlcollapse
	polygonOffset
	{
		map gfx/2d/dom_point/dom_shadow.tga
		blendfunc blend
		rgbGen vertex
	}
	{
		clampmap gfx/2d/dom_point/dom_shadow_pulse_1.tga
		blendfunc blend
		tcMod stretch sin 1.0 .25 0 .4
		rgbGen vertex
	}	
	{
		clampmap gfx/2d/dom_point/dom_shadow_pulse_2.tga
		blendfunc blend
		tcMod stretch sin 1.0 .3 0 .4
		rgbGen vertex
	}
}

// projectionShadow is used for cheap squashed model shadows

projectionShadow
{
	nopicmip
	polygonOffset
	deformVertexes projectionShadow
	{
		map			*white
		blendfunc GL_ONE GL_ZERO
		rgbGen wave square 0 0 0 0				// just solid black
	}	
}


// wake is the mark on water surfaces for paddling players

wake
{
	nopicmip
	{
		clampmap sprites/splash.tga
		blendfunc add
		rgbGen vertex
                tcmod rotate 150
                tcMod stretch sin .9 0.08 0 0.8
		rgbGen wave sin .4 .1 .25 .5
	}
        {
		clampmap sprites/splash2.tga
		blendfunc add
		rgbGen vertex
                tcmod rotate 100
                tcMod stretch sin .9 0.05 0 0.9
		rgbGen wave sin .7 .3 .25 .4
	}

}


// viewBloodBlend gives the blended directional cue when you get hit

viewBloodBlend
{
	nopicmip
	sort	nearest
	{
		map gfx/damage/blood_screen.tga
		blendfunc blend
		rgbGen entity
		alphaGen vertex
	}
}

waterBubble
{
	nopicmip
	sort	underwater
	cull none
	entityMergable		// allow all the sprites to be merged together
	{
		map sprites/bubble.tga
		blendfunc blend
		rgbGen		vertex
		alphaGen	vertex
	}
}

gibspark
{
	nopicmip
	{
		map models/gibs/sphere.tga
		blendfunc add
	}
}

deathEffect
{
	nopicmip
	cull disable
	entityMergable		// allow all the sprites to be merged together
	{
		animmap 10 gfx/misc/deathSpike6.jpg gfx/misc/deathSpike7.jpg gfx/misc/deathSpike8.jpg gfx/misc/deathSpike9.jpg gfx/misc/deathSpike10.jpg gfx/misc/deathSpike11.jpg
		blendfunc add 
        rgbGen wave sawtooth .2 0.5 0 1
	}
	{
		animmap 10 gfx/misc/deathSpike7.jpg gfx/misc/deathSpike8.jpg gfx/misc/deathSpike9.jpg gfx/misc/deathSpike10.jpg gfx/misc/deathSpike11.jpg
		blendfunc add 
        rgbGen wave sawtooth .2 0.5 0 1
	}
	{
		clampmap gfx/misc/deathSpike12.jpg
		blendfunc add
        tcMod stretch triangle .4 0.05 0 6
        tcmod rotate 500
        rgbGen wave inversesawtooth 0 1 0 1.5
	}
	{
		clampmap models/powerups/pop2.tga
		blendfunc add
        tcMod stretch triangle .6 0.1 0 6
        tcmod rotate -300
        rgbGen wave inversesawtooth 0.4 0.2 0 1.5
	}
}
//alternate
//deathEffect
//{
//	nopicmip
//	cull disable
//	entityMergable
//	{
//	animmap 18 gfx/misc/death01.jpg gfx/misc/death02.jpg gfx/misc/death03.jpg gfx/misc/death04.jpg gfx/misc/death05.jpg gfx/misc/death04.jpg gfx/misc/death03.jpg gfx/misc/death02.jpg gfx/misc/death01.jpg
//		blendfunc add 
//        	rgbGen wave sawtooth .2 0.5 0 1
//	}
//	{
//	animmap 18 gfx/misc/death02.jpg gfx/misc/death03.jpg gfx/misc/death04.jpg gfx/misc/death05.jpg gfx/misc/death04.jpg gfx/misc/death03.jpg gfx/misc/death02.jpg gfx/misc/death01.jpg
//		blendfunc add 
//        	rgbGen wave sawtooth .2 0.5 0 1
//	}
//	{
//		clampmap models/powerups/pop2.tga
//		blendfunc add
//        	tcMod stretch triangle .6 0.1 0 6
//        	tcmod rotate -300
//        	rgbGen wave inversesawtooth 0.4 0.2 0 1.5
//	}
//}

smokePuff
{
	nopicmip
	cull none
	entityMergable		// allow all the sprites to be merged together
	{
		map gfx/misc/smokepuff3.tga
		blendfunc blend
		rgbGen		vertex
		alphaGen	vertex
	}
}

hasteSmokePuff			// drops behind player's feet when speeded
{
	nopicmip
	cull none
	entityMergable		// allow all the sprites to be merged together
	{
		map gfx/misc/smokepuff3.tga
		blendfunc blend
        //blendfunc add
		rgbGen		vertex
		alphaGen	vertex
	}
}

surfacePuff			// drops behind player's feet when speeded
{
	nopicmip
	cull none
	entityMergable		// allow all the sprites to be merged together
	{
		map gfx/misc/smokepuff2b.tga
		blendfunc blend
		rgbGen		vertex
		alphaGen	vertex
	}
}

smokePuffRagePro
{
	nopicmip
	cull none
	entityMergable		// allow all the sprites to be merged together
	{
		map gfx/misc/smokepuffragepro.tga
		blendfunc blend
	}
}

shotgunSmokePuff
{
	nopicmip
	cull none
	{
		map gfx/misc/smokepuff2b.tga
		blendfunc blend
		alphaGen entity		
		rgbGen entity
	}
}

flareShader
{
	cull none
	{
		map gfx/misc/flare.tga
		blendfunc add
		rgbGen vertex
	}
}

sun
{
	cull none
	{
		map gfx/misc/sun.tga
		blendfunc add
		rgbGen vertex
	}
}

railDisc
{
	nopicmip
	sort nearest
	cull none
        deformVertexes wave 100 sin 0 .5 0 2.4
	{
		clampmap gfx/misc/raildisc_mono2.tga 
		blendfunc add
		rgbGen vertex
                 tcMod rotate -30
	}
}

railCore
{
	nopicmip
	sort nearest
	cull none
	{
		map gfx/misc/railcorethin_mono.tga
		blendfunc add
		rgbGen vertex
		tcMod scroll -1 0
	}
}

// shader used on the occasional machinegun bullet tracers

gfx/misc/tracer
{
	nopicmip
	cull none
	{
		map	gfx/misc/tracer2.tga
		blendfunc add
	}
}

// shader used on the occasional machinegun bullet tracers

gfx/misc/iceball
{
	nopicmip
	cull none
	{
		map	gfx/misc/iceball.tga
		blendfunc add
	}
}

//
// wall marks
// use blendfunc GL_ZERO GL_ONE_MINUS_SRC_COLOR so that
// their "contribution" can be damped down in fog volumes
// with distance

bloodMark
{
	nopicmip			// make sure a border remains
	polygonOffset
	{
		clampmap gfx/damage/blood_stain.tga
		blendfunc blend
		rgbGen identityLighting
		alphaGen vertex
	}
}

bloodTrail
{
        
	nopicmip			// make sure a border remains
	entityMergable		// allow all the sprites to be merged together
	{
		//clampmap gfx/misc/blood.tga
                clampmap gfx/damage/blood_spurt.tga
		blendfunc blend
		rgbGen		vertex
		alphaGen	vertex
	}
}

iceMark
{
	nopicmip			// make sure a border remains
	polygonOffset
	{
		clampmap gfx/damage/ice_stain.tga
		blendfunc blend
		rgbGen identityLighting
		alphaGen vertex
	}
}

iceTrail
{
        
	nopicmip			// make sure a border remains
	entityMergable		// allow all the sprites to be merged together
	{
        clampmap gfx/damage/ice_spurt.tga
		blendfunc blend
		rgbGen		vertex
		alphaGen	vertex
	}
}

gfx/damage/bullet_mrk
{
	nopicmip
	polygonOffset
	{
		map gfx/damage/bullet_mrk.tga
		blendfunc GL_ZERO GL_ONE_MINUS_SRC_COLOR
		rgbGen exactVertex
	}
}

gfx/damage/burn_med_mrk
{
	nopicmip
	polygonOffset
	{
		map gfx/damage/burn_med_mrk.tga
		blendfunc GL_ZERO GL_ONE_MINUS_SRC_COLOR
		rgbGen exactVertex
	}
}

gfx/damage/hole_lg_mrk
{
	nopicmip
	polygonOffset
	{
		map gfx/damage/hole_lg_mrk.tga
		blendfunc GL_ZERO GL_ONE_MINUS_SRC_COLOR
		rgbGen exactVertex
	}
}

gfx/damage/plasma_mrk
{
	nopicmip
	polygonOffset
	{
		map gfx/damage/plasma_mrk.tga
		blendfunc blend
		rgbGen vertex
		alphaGen vertex
	}
}

gfx/damage/cracked_mrk
{
	nopicmip
	polygonOffset
	{
		map gfx/damage/cracked_mrk.tga
		blendfunc GL_ZERO GL_ONE_MINUS_SRC_COLOR
		rgbGen exactVertex
	}
}


//===============================================================

// scoreboard header tabs

scoreboardName
{
	nopicmip
	nomipmaps
	{
		clampmap menu/tab/name.tga
		blendfunc blend
	}
}

scoreboardScore
{
	nopicmip
	nomipmaps
	{
		clampmap menu/tab/score.tga
		blendfunc blend
	}
}

scoreboardTime
{
	nopicmip
	nomipmaps
	{
		clampmap menu/tab/time.tga
		blendfunc blend
	}
}

scoreboardPing
{
	nopicmip
	nomipmaps
	{
		clampmap menu/tab/ping.tga
		blendfunc blend
	}
}

//===============================================================

gfx/2d/crosshair
{
	nopicmip
	{
		map gfx/2d/crosshair.tga          
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshaira
{
	nopicmip
	{
		map gfx/2d/crosshaira.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshaira_high
{
	nopicmip
	{
		map gfx/2d/crosshaira_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairb
{
	nopicmip
	{
		map gfx/2d/crosshairb.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairb_high
{
	nopicmip
	{
		map gfx/2d/crosshairb_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairc
{
	nopicmip
	{
		map gfx/2d/crosshairc.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairc_high
{
	nopicmip
	{
		map gfx/2d/crosshairc_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshaird
{
	nopicmip
	{
		map gfx/2d/crosshaird.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshaird_high
{
	nopicmip
	{
		map gfx/2d/crosshaird_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshaire
{
	nopicmip
	{
		map gfx/2d/crosshaire.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshaire_high
{
	nopicmip
	{
		map gfx/2d/crosshaire_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairf
{
	nopicmip
	{
		map gfx/2d/crosshairf.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairf_high
{
	nopicmip
	{
		map gfx/2d/crosshairf_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairg
{
	nopicmip
	{
		map gfx/2d/crosshairg.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairg_high
{
	nopicmip
	{
		map gfx/2d/crosshairg_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairh
{
	nopicmip
	{
		map gfx/2d/crosshairh.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairh_high
{
	nopicmip
	{
		map gfx/2d/crosshairh_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairi
{
	nopicmip
	{
		map gfx/2d/crosshairi.tga
		blendfunc blend
		rgbGen exactVertex
	}

}

gfx/2d/crosshairi_high
{
	nopicmip
	{
		map gfx/2d/crosshairi_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairj
{
	nopicmip
	{
		map gfx/2d/crosshairj.tga       
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshairj_high
{
	nopicmip
	{
		map gfx/2d/crosshairj_high.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair1
{
	nopicmip
	{
		map gfx/2d/crosshair1.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair2
{
	nopicmip
	{
		map gfx/2d/crosshair2.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair3
{
	nopicmip
	{
		map gfx/2d/crosshair3.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair4
{
	nopicmip
	{
		map gfx/2d/crosshair4.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair5
{
	nopicmip
	{
		map gfx/2d/crosshair5.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair6
{
	nopicmip
	{
		map gfx/2d/crosshair6.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair7
{
	nopicmip
	{
		map gfx/2d/crosshair7.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair8
{
	nopicmip
	{
		map gfx/2d/crosshair8.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair9
{
	nopicmip
	{
		map gfx/2d/crosshair9.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair10
{
	nopicmip
	{
		map gfx/2d/crosshair10.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair11
{
	nopicmip
	{
		map gfx/2d/crosshair11.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair12
{
	nopicmip
	{
		map gfx/2d/crosshair12.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair13
{
	nopicmip
	{
		map gfx/2d/crosshair13.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair14
{
	nopicmip
	{
		map gfx/2d/crosshair14.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair15
{
	nopicmip
	{
		map gfx/2d/crosshair15.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair16
{
	nopicmip
	{
		map gfx/2d/crosshair16.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair17
{
	nopicmip
	{
		map gfx/2d/crosshair17.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair18
{
	nopicmip
	{
		map gfx/2d/crosshair18.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/crosshair19
{
	nopicmip
	{
		map gfx/2d/crosshair19.tga
		blendfunc blend
		rgbGen exactVertex
	}
}

gfx/2d/bigchars
{
	nopicmip
	nomipmaps
	{
		map gfx/2d/bigchars.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/select
{
	nopicmip
	{
		map gfx/2d/select.tga
		blendfunc blend
		rgbGen identity
		rgbgen vertex
	}
}

gfx/2d/assault1d
{
	nopicmip
	{
		map gfx/2d/assault1d.tga
		blendfunc blend
	}
}

gfx/2d/armor1h
{
	nopicmip
	{
		map gfx/2d/armor1h.tga
		blendfunc blend
	}
}

gfx/2d/health
{
	nopicmip
	{
		map gfx/2d/health.tga
		blendfunc blend
	}
}

gfx/2d/blank
{
	nopicmip
	{
		map gfx/2d/blank.tga
		blendfunc blend
	}
}

gfx/2d/numbers/zero_32b
{
	nopicmip
	{
		map gfx/2d/numbers/zero_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/one_32b
{
	nopicmip
	{
		map gfx/2d/numbers/one_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/two_32b
{
	nopicmip
	{
		map gfx/2d/numbers/two_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/three_32b
{
	nopicmip
	{
		map gfx/2d/numbers/three_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/four_32b
{
	nopicmip
	{
		map gfx/2d/numbers/four_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/five_32b
{
	nopicmip
	{
		map gfx/2d/numbers/five_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/six_32b
{
	nopicmip
	{
		map gfx/2d/numbers/six_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/seven_32b
{
	nopicmip
	{
		map gfx/2d/numbers/seven_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/eight_32b
{
	nopicmip
	{
		map gfx/2d/numbers/eight_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/nine_32b
{
	nopicmip
	{
		map gfx/2d/numbers/nine_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

gfx/2d/numbers/minus_32b
{
	nopicmip
	{
		map gfx/2d/numbers/minus_32b.tga
		blendfunc blend
		rgbgen vertex
	}
}

icons/headshot
{
	nopicmip
	{
		map icons/headshot.tga
		blendfunc blend
		rgbgen vertex
	}
}

//
// weapon hits
// All of these will be put on entities with a shaderTime offset, so they
// can be expected to start at time 0 for each separate explosion
//
// Many of these are use smoothly morphed animating textures by pairing
// sawtooth and iverse sawtooth rgbGens

plasmaExplosion
{
	nopicmip
	cull disable
	{
		clampmap models/weaphits/plasmaboom.tga
		blendfunc add
                tcMod stretch triangle .6 0.1 0 8
                tcmod rotate 999
                rgbGen wave inversesawtooth 0 1 0 1.5
	}
}

railExplosion
{
	nopicmip
	cull disable
        {
		animmap 5 models/weaphits/ring02_1.tga  models/weaphits/ring02_2.tga  models/weaphits/ring02_3.tga models/weaphits/ring02_4.tga gfx/colors/black.tga
		alphaGen wave inversesawtooth 0 1 0 5
		blendfunc blend
	}
	{
		animmap 5 models/weaphits/ring02_2.tga  models/weaphits/ring02_3.tga models/weaphits/ring02_4.tga gfx/colors/black.tga gfx/colors/black.tga
		alphaGen wave sawtooth 0 1 0 5
		blendfunc blend
	}
}

lightningExplosion
{
	nopicmip
	cull disable
	{
		animmap 5 models/weaphits/ring02_1.tga  models/weaphits/ring02_3.tga  models/weaphits/ring02_3.tga gfx/colors/black.tga
		rgbGen wave inversesawtooth 0 1 0 5
		blendfunc add
	}
	{
		animmap 5 models/weaphits/ring02_2.tga  models/weaphits/ring02_3.tga  gfx/colors/black.tga gfx/colors/black.tga
		rgbGen wave sawtooth 0 1 0 5
		blendfunc add
	}
}

models/weaphits/bullet1
{
	nopicmip
	{
		map models/weaphits/bullet1.tga
	}
}

models/weaphits/bullet2
{
	nopicmip
	{
		map models/weaphits/bullet2.tga
	}
}

models/weaphits/bullet3
{
	nopicmip
	{
		map models/weaphits/bullet3.tga
	}
}

bulletExplosion
{
	nopicmip
	cull disable
	{
		animmap 5 models/weaphits/bullet1.tga  models/weaphits/bullet2.tga  models/weaphits/bullet3.tga gfx/colors/black.tga
		rgbGen wave inversesawtooth 0 1 0 5
		blendfunc add
	}
	{
		animmap 5 models/weaphits/bullet2.tga  models/weaphits/bullet3.tga  gfx/colors/black.tga gfx/colors/black.tga
		rgbGen wave sawtooth 0 1 0 5
		blendfunc add
	}
}

rocketExplosion
{
	nopicmip
	cull disable
	{
		animmap 8 models/weaphits/rlboom/rlboom_1.tga  models/weaphits/rlboom/rlboom_2.tga models/weaphits/rlboom/rlboom_3.tga models/weaphits/rlboom/rlboom_4.tga models/weaphits/rlboom/rlboom_5.tga models/weaphits/rlboom/rlboom_6.tga models/weaphits/rlboom/rlboom_7.tga models/weaphits/rlboom/rlboom_8.tga
		rgbGen wave inversesawtooth 0 1 0 8
		blendfunc add
	}
	{
		animmap 8 models/weaphits/rlboom/rlboom_2.tga models/weaphits/rlboom/rlboom_3.tga models/weaphits/rlboom/rlboom_4.tga models/weaphits/rlboom/rlboom_5.tga models/weaphits/rlboom/rlboom_6.tga models/weaphits/rlboom/rlboom_7.tga models/weaphits/rlboom/rlboom_8.tga gfx/colors/black.tga
		rgbGen wave sawtooth 0 1 0 8
		blendfunc add
	}
}

grenadeExplosion
{
	nopicmip
	cull disable
	{
		animmap 5 models/weaphits/glboom/glboom_1.tga  models/weaphits/glboom/glboom_2.tga models/weaphits/glboom/glboom_3.tga
		rgbGen wave inversesawtooth 0 1 0 5
		blendfunc add
	}
	{
		animmap 5 models/weaphits/glboom/glboom_2.tga  models/weaphits/glboom/glboom_3.tga gfx/colors/black.tga
		rgbGen wave sawtooth 0 1 0 5
		blendfunc add
	}
}

bfgExplosion
{
	nopicmip
	cull disable
	{
		animmap 5 models/weaphits/bfgboom/bfgboom_1.tga  models/weaphits/bfgboom/bfgboom_2.tga models/weaphits/bfgboom/bfgboom_3.tga
		rgbGen wave inversesawtooth 0 1 0 5
		blendfunc add
	}
	{
		animmap 5 models/weaphits/bfgboom/bfgboom_2.tga models/weaphits/bfgboom/bfgboom_3.tga gfx/colors/black.tga
		rgbGen wave sawtooth 0 1 0 5
		blendfunc add
	}
}

bloodExplosion		// spurt of blood at point of impact
{
	nopicmip
	cull disable
	{
		map models/weaphits/blood201.tga
		blendfunc blend
		alphaGen entity
		rgbGen entity
	}
}

gfx/misc/jack-o-view
{
	nopicmip
	{ 
		map gfx/misc/jack-o-view.tga
		blendfunc blend
	}
}

gfx/2d/quad_hog/quad
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/quad_hog/quad_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/quad_hog/quad.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/quad_hog/quadhog
{
	nopicmip
	{
		map gfx/2d/quad_hog/quadhog.tga
		blendfunc	GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
		rgbgen vertex
	}
}

gfx/2d/har/poi_capture
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/har/capture_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/har/capture.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/ad/poi_attack
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/ad/attack_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/ad/attack.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/ad/poi_capture
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/ad/capture_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/ad/capture.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/ad/poi_defend
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/ad/defend_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/ad/defend.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_a
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_cap_a_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_a.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_a_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_cap_a_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_a.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_b
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_cap_b_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_b.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_b_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_cap_b_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_b.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_c
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_cap_c_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_c.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_c_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_cap_c_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_c.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_d
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_cap_d_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_d.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_d_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_cap_d_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_d.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_e
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_cap_e_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_e.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_cap_e_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_cap_e_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_cap_e.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_a
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_def_a_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_a.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_a_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_def_a_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_a.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_b
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_def_b_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_b.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_b_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_def_b_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_b.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_c
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_def_c_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_c.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_c_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_def_c_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_c.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_d
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_def_d_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_d.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_d_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_def_d_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_d.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_e
{
	nopicmip
	novlcollapse
	{
		map gfx/2d/dom_point/dom_def_e_tint.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_e.tga
		blendfunc blend
		rgbgen identity
	}
}

gfx/2d/dom_point/dom_def_e_dist
{
	nopicmip
	novlcollapse
	{
		AnimMap 4 gfx/2d/dom_point/dom_def_e_tint.tga gfx/2d/dom_point/dom_distress.tga
		blendfunc add
		rgbgen vertex
	}
	{
		map gfx/2d/dom_point/dom_def_e.tga
		blendfunc blend
		rgbgen identity
	}
}
